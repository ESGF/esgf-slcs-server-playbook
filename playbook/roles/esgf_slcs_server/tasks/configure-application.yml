---

- name: Install Django settings file
  template:
    src: templates/settings.py.j2
    dest: "{{ code_location }}/esgf_slcs_server/settings.py"
  become: yes
  become_user: "{{ application_user }}"
  notify:
    - Restart ESGF SLCS Server

- name: Make config directory
  file: path={{ application_home }}/conf/app state=directory
  become: yes
  become_user: "{{ application_user }}"

- name: Create Django secret file
  shell: tr -dc '[:alnum:][:punct:]' < /dev/urandom | head -c 100 > {{ application_home }}/conf/app/secret_key.txt
  args:
    creates: "{{ application_home }}/conf/app/secret_key.txt"
  become: yes
  become_user: "{{ application_user }}"
  notify:
    - Restart ESGF SLCS Server

- name: Set permissions on Django secret file
  file: path={{ application_home }}/conf/app/secret_key.txt mode="u=r,g=,o="
  become: yes
  become_user: "{{ application_user }}"

- name: Create ESGF slcsdb password file
  copy:
    content: "{{ esgf_slcsdb.password }}"
    dest: "{{ application_home }}/conf/app/slcsdb_passwd.txt"
    mode: "u=r,g=,o="
  become: yes
  become_user: "{{ application_user }}"
  when: "'password' in esgf_slcsdb"
  notify:
    - Restart ESGF SLCS Server

- name: Create ESGF userdb password file
  copy:
    content: "{{ esgf_userdb.password }}"
    dest: "{{ application_home }}/conf/app/userdb_passwd.txt"
    mode: "u=r,g=,o="
  become: yes
  become_user: "{{ application_user }}"
  when: "'password' in esgf_userdb"
  notify:
    - Restart ESGF SLCS Server

- name: Run database migrations
  shell: "python {{ code_location }}/manage.py migrate"
  become: yes
  become_user: "{{ application_user }}"

- name: Create Django superuser
  shell: >
    python  \
    {{ code_location }}/manage.py createsuperuser  \
    --noinput --username={{ django_superuser }} --email=notused@notused.com
  become: yes
  become_user: "{{ application_user }}"
  register: create_superuser
  changed_when: create_superuser.rc == 0
  failed_when: "create_superuser.rc != 0 and 'duplicate key value violates unique constraint' not in create_superuser.stderr"

- name: Collect static files
  shell: >
    python  \
    {{ code_location }}/manage.py collectstatic --noinput --clear
